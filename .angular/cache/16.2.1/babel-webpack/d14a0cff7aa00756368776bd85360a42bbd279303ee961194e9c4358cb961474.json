{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nimport * as i2 from \"@angular/router\";\nexport class AuthGuard {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n  }\n  canActivate() {\n    const isAuthenticated = this.authService.isLoggedIn();\n    if (this.authService.isLoggedIn()) {\n      return true;\n    } else {\n      this.router.navigate(['/login']);\n      return false;\n    }\n  }\n}\n_class = AuthGuard;\n_class.ɵfac = function AuthGuard_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["AuthGuard","constructor","authService","router","canActivate","isAuthenticated","isLoggedIn","navigate","i0","ɵɵinject","i1","AuthService","i2","Router","factory","ɵfac","providedIn"],"sources":["C:\\projeto-integrado\\src\\app\\shared\\auth.guard.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { CanActivate, Router } from \"@angular/router\";\r\nimport { AuthService } from \"./auth.service\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class AuthGuard implements CanActivate {\r\n    constructor( private authService: AuthService, private router: Router) {}\r\n\r\n    canActivate(): boolean {\r\n        const isAuthenticated = this.authService.isLoggedIn();\r\n\r\n        if (this.authService.isLoggedIn()) {\r\n            return true;\r\n        } else {\r\n            this.router.navigate(['/login']);\r\n            return false;\r\n        }\r\n    }\r\n}"],"mappings":";;;;AAQA,OAAM,MAAOA,SAAS;EAClBC,YAAqBC,WAAwB,EAAUC,MAAc;IAAhD,KAAAD,WAAW,GAAXA,WAAW;IAAuB,KAAAC,MAAM,GAANA,MAAM;EAAW;EAExEC,WAAWA,CAAA;IACP,MAAMC,eAAe,GAAG,IAAI,CAACH,WAAW,CAACI,UAAU,EAAE;IAErD,IAAI,IAAI,CAACJ,WAAW,CAACI,UAAU,EAAE,EAAE;MAC/B,OAAO,IAAI;KACd,MAAM;MACH,IAAI,CAACH,MAAM,CAACI,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;MAChC,OAAO,KAAK;;EAEpB;;SAZSP,SAAS;;mBAATA,MAAS,EAAAQ,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;AAAA;;SAATb,MAAS;EAAAc,OAAA,EAATd,MAAS,CAAAe,IAAA;EAAAC,UAAA,EAHN;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}