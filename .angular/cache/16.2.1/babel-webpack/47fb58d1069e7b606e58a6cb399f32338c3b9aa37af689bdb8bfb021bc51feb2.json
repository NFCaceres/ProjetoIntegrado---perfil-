{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/compat/auth\";\nimport * as i2 from \"@angular/router\";\nexport class AuthService {\n  constructor(fireauth, router) {\n    this.fireauth = fireauth;\n    this.router = router;\n  }\n  isLoggedIn() {\n    const isUserAuthenticated = !!this.fireauth.currentUser;\n    console.log(\"AuthService: isUserAuthenticated =\", isUserAuthenticated);\n    return !!this.fireauth.currentUser;\n  }\n  // metodo de login\n  login(email, password) {\n    this.fireauth.signInWithEmailAndPassword(email, password).then(res => {\n      localStorage.setItem('token', 'true');\n      if (res.user?.emailVerified == true) {\n        this.loginSuccess = true; // Login bem-sucedido\n        this.router.navigate(['/home']);\n      } else {\n        this.loginSuccess = false; // Login com falha (email não verificado)\n        this.router.navigate(['/varify-email']);\n      }\n    }, err => {\n      this.loginSuccess = false; // Login com falha (erro)\n      alert('Algo está errado');\n      this.router.navigate(['/login']);\n    });\n  }\n  //metodo de cadastro\n  register(email, password) {\n    this.fireauth.createUserWithEmailAndPassword(email, password).then(res => {\n      alert('Cadastro efetuado com sucesso');\n      this.router.navigate(['/login']);\n      this.sendEmailVerification(res.user);\n    }, err => {\n      alert(err.message);\n      this.router.navigate(['/register']);\n    });\n  }\n  // sair\n  logout() {\n    this.fireauth.signOut().then(() => {\n      localStorage.removeItem('token');\n      this.router.navigate(['/login']);\n    }, err => {\n      alert(err.message);\n    });\n  }\n  // recupertar senha \n  forgotPassword(email) {\n    this.fireauth.sendPasswordResetEmail(email).then(() => {\n      this.router.navigate(['/varify-email']);\n    }, err => {\n      alert('Algo está errado');\n    });\n  }\n  // verificação de email\n  sendEmailVerification(user) {\n    user.sendEmailVerification().then(res => {\n      this.router.navigate(['/varify-email']);\n    }, err => {\n      alert('Algo está errado. Não cosnigo enviar o email de confirmação.');\n    });\n  }\n}\n_class = AuthService;\n_class.ɵfac = function AuthService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.AngularFireAuth), i0.ɵɵinject(i2.Router));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["AuthService","constructor","fireauth","router","isLoggedIn","isUserAuthenticated","currentUser","console","log","login","email","password","signInWithEmailAndPassword","then","res","localStorage","setItem","user","emailVerified","loginSuccess","navigate","err","alert","register","createUserWithEmailAndPassword","sendEmailVerification","message","logout","signOut","removeItem","forgotPassword","sendPasswordResetEmail","i0","ɵɵinject","i1","AngularFireAuth","i2","Router","factory","ɵfac","providedIn"],"sources":["C:\\projeto-integrado\\src\\app\\shared\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/compat/auth';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  loginSuccess: boolean | undefined;\n\n  constructor( private fireauth : AngularFireAuth, private router : Router) { }\n  \n  isLoggedIn(): boolean {\n    const isUserAuthenticated = !!this.fireauth.currentUser;\n    console.log(\"AuthService: isUserAuthenticated =\", isUserAuthenticated);\n    return !!this.fireauth.currentUser;\n  }\n\n\n  // metodo de login\n  login(email: string, password: string) {\n    this.fireauth.signInWithEmailAndPassword(email, password).then((res) => {\n      localStorage.setItem('token', 'true');\n  \n      if (res.user?.emailVerified == true) {\n        this.loginSuccess = true; // Login bem-sucedido\n        this.router.navigate(['/home']);\n      } else {\n        this.loginSuccess = false; // Login com falha (email não verificado)\n        this.router.navigate(['/varify-email']);\n      }\n    }, (err) => {\n      this.loginSuccess = false; // Login com falha (erro)\n      alert('Algo está errado');\n      this.router.navigate(['/login']);\n    });\n  }\n  \n  //metodo de cadastro\n  register(email : string, password : string){\n    this.fireauth.createUserWithEmailAndPassword(email, password).then( res => {\n      alert('Cadastro efetuado com sucesso');\n      this.router.navigate(['/login']);\n      this.sendEmailVerification(res.user);\n    }, err => {\n      alert(err.message);\n      this.router.navigate(['/register']);\n    })\n  }\n\n  // sair\n  logout(){\n    this.fireauth.signOut().then( () => {\n      localStorage.removeItem('token');\n      this.router.navigate(['/login']);\n    }, err => {\n      alert(err.message);\n    })\n  }\n  \n  // recupertar senha \n  forgotPassword(email : string) {\n    this.fireauth.sendPasswordResetEmail(email).then( () => {\n      this.router.navigate(['/varify-email']);\n    }, err => {\n      alert('Algo está errado');\n    })\n    }\n\n  // verificação de email\n  sendEmailVerification(user : any) {\n    user.sendEmailVerification().then((res : any) => {\n      this.router.navigate(['/varify-email']);\n    }, (err : any) => {\n      alert('Algo está errado. Não cosnigo enviar o email de confirmação.')\n    })\n  }\n  }\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}