{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/compat/auth\";\nimport * as i2 from \"@angular/router\";\nexport class AuthService {\n  constructor(fireauth, router) {\n    this.fireauth = fireauth;\n    this.router = router;\n    this.fireauth.authState.subscribe(user => {\n      if (user) {\n        this.router.navigate(['/home']);\n        console.log('Usuário autenticado:', user);\n      } else {\n        console.log('Nenhum usuário autenticado');\n      }\n    });\n  }\n  isLoggedIn() {\n    return !!this.fireauth.currentUser;\n  }\n  // metodo de login\n  login(email, password) {\n    //  this.fireauth.setPersistence('local').then(() => { \n    this.fireauth.signInWithEmailAndPassword(email, password).then(res => {\n      localStorage.setItem('token', 'true');\n      if (res.user?.emailVerified == true) {\n        this.loginSuccess = true; // Login bem-sucedido\n        this.router.navigate(['/home']);\n      } else {\n        this.loginSuccess = false; // Login com falha (email não verificado)\n        this.router.navigate(['/verify-email']);\n      }\n    }, err => {\n      this.loginSuccess = false; // Login com falha (erro)\n      alert('Algo está errado');\n      this.router.navigate(['/login']);\n    });\n    // });\n  }\n  //metodo de cadastro\n  register(email, password) {\n    this.fireauth.createUserWithEmailAndPassword(email, password).then(res => {\n      alert('Cadastro efetuado com sucesso');\n      this.router.navigate(['/login']);\n      this.sendEmailVerification(res.user);\n    }, err => {\n      alert(err.message);\n      this.router.navigate(['/register']);\n    });\n  }\n  // sair\n  logout() {\n    this.fireauth.signOut().then(() => {\n      localStorage.removeItem('token');\n      this.router.navigate(['/login']);\n    }, err => {\n      alert(err.message);\n    });\n  }\n  // recupertar senha \n  forgotPassword(email) {\n    this.fireauth.sendPasswordResetEmail(email).then(() => {\n      this.router.navigate(['/verify-email']);\n    }, err => {\n      alert('Algo está errado');\n    });\n  }\n  // verificação de email\n  sendEmailVerification(user) {\n    user.sendEmailVerification().then(res => {\n      this.router.navigate(['/verify-email']);\n    }, err => {\n      alert('Algo está errado. Não consigo enviar o email de confirmação.');\n    });\n  }\n}\n_class = AuthService;\n_class.ɵfac = function AuthService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.AngularFireAuth), i0.ɵɵinject(i2.Router));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["AuthService","constructor","fireauth","router","authState","subscribe","user","navigate","console","log","isLoggedIn","currentUser","login","email","password","signInWithEmailAndPassword","then","res","localStorage","setItem","emailVerified","loginSuccess","err","alert","register","createUserWithEmailAndPassword","sendEmailVerification","message","logout","signOut","removeItem","forgotPassword","sendPasswordResetEmail","i0","ɵɵinject","i1","AngularFireAuth","i2","Router","factory","ɵfac","providedIn"],"sources":["C:\\ProjetoIntegrado\\src\\app\\shared\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { AngularFireAuth } from '@angular/fire/compat/auth';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  loginSuccess: boolean | undefined;\r\n  angularFireAuth: any;\r\n  \r\n  constructor( private fireauth : AngularFireAuth, private router : Router) {\r\n    this.fireauth.authState.subscribe(user => {\r\n      if (user) {\r\n        this.router.navigate(['/home']);\r\n        console.log('Usuário autenticado:', user);\r\n      } else {\r\n        console.log('Nenhum usuário autenticado');\r\n      }\r\n    });\r\n\r\n   }  \r\n\r\n  isLoggedIn(): boolean {\r\n    return !!this.fireauth.currentUser;\r\n  }\r\n\r\n  // metodo de login\r\n  login(email: string, password: string) {\r\n //  this.fireauth.setPersistence('local').then(() => { \r\n    this.fireauth.signInWithEmailAndPassword(email, password).then((res) => {\r\n      localStorage.setItem('token', 'true');\r\n\r\n      if (res.user?.emailVerified == true) {\r\n        this.loginSuccess = true; // Login bem-sucedido\r\n        this.router.navigate(['/home']);\r\n      } else {\r\n        this.loginSuccess = false; // Login com falha (email não verificado)\r\n        this.router.navigate(['/verify-email']);\r\n      }\r\n    }, (err) => {\r\n      this.loginSuccess = false; // Login com falha (erro)\r\n      alert('Algo está errado');\r\n      this.router.navigate(['/login']);\r\n    });\r\n // });\r\n  }\r\n  \r\n  //metodo de cadastro\r\n  register(email : string, password : string){\r\n    this.fireauth.createUserWithEmailAndPassword(email, password).then( res => {\r\n      alert('Cadastro efetuado com sucesso');\r\n      this.router.navigate(['/login']);\r\n      this.sendEmailVerification(res.user);\r\n    }, err => {\r\n      alert(err.message);\r\n      this.router.navigate(['/register']);\r\n    })\r\n  }\r\n\r\n  // sair\r\n  logout(){\r\n    this.fireauth.signOut().then( () => {\r\n      localStorage.removeItem('token');\r\n      this.router.navigate(['/login']);\r\n    }, err => {\r\n      alert(err.message);\r\n    })\r\n  }\r\n  \r\n  // recupertar senha \r\n  forgotPassword(email : string) {\r\n    this.fireauth.sendPasswordResetEmail(email).then( () => {\r\n      this.router.navigate(['/verify-email']);\r\n    }, err => {\r\n      alert('Algo está errado');\r\n    })\r\n    }\r\n\r\n  // verificação de email\r\n  sendEmailVerification(user : any) {\r\n    user.sendEmailVerification().then((res : any) => {\r\n      this.router.navigate(['/verify-email']);\r\n    }, (err : any) => {\r\n      alert('Algo está errado. Não consigo enviar o email de confirmação.')\r\n    })\r\n  }\r\n  }\r\n\r\n  \r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}