{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nexport class AuthService {\n  // metodo de login\n  login(email, password) {\n    this.fireauth.signInWithEmailAndPassword(email, password).then(() => {\n      localStorage.setItem('token', 'true');\n      this.router.navigate(['dashboard']);\n    }, err => {\n      alert('Algo está errado');\n      this.router.navigate(['/login']);\n    });\n  }\n  //metodo de cadastro\n  register(email, password) {\n    this.fireauth.createUserWithEmailAndPassword(email, password).then(() => {\n      alert('Cadastro efetuado com sucesso');\n      this.router.navigate(['/login']);\n    }, err => {\n      alert(err.message);\n      this.router.navigate(['/register']);\n    });\n  }\n  // sair\n  logout() {\n    this.fireauth.signOut().then(() => {\n      localStorage.removeItem('token');\n      this.router.navigate(['/login']);\n    }, err => {\n      alert(err.message);\n    });\n  }\n}\n_class = AuthService;\n_class.ɵfac = function AuthService_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["AuthService","login","email","password","fireauth","signInWithEmailAndPassword","then","localStorage","setItem","router","navigate","err","alert","register","createUserWithEmailAndPassword","message","logout","signOut","removeItem","factory","ɵfac","providedIn"],"sources":["C:\\projeto-integrado\\src\\app\\shared\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/compat/auth';\nimport { Router } from '@angular/router';\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  \n  \n  // metodo de login\n  login(email : string, password : string) {\n    this.fireauth.signInWithEmailAndPassword(email, password).then( () => { \n      localStorage.setItem('token', 'true');\n      this.router.navigate(['dashboard']);\n    }, err => {\n      alert('Algo está errado');\n      this.router.navigate(['/login']);\n    })\n  } \n  \n  //metodo de cadastro\n  register(email : string, password : string){\n    this.fireauth.createUserWithEmailAndPassword(email, password).then(() => {\n      alert('Cadastro efetuado com sucesso');\n      this.router.navigate(['/login']);\n    }, err => {\n      alert(err.message);\n      this.router.navigate(['/register']);\n    })\n  }\n\n  // sair\n  logout(){\n    this.fireauth.signOut().then( () => {\n      localStorage.removeItem('token');\n      this.router.navigate(['/login']);\n    }, err => {\n      alert(err.message);\n    })\n  }\n  \n}\n"],"mappings":";;AAMA,OAAM,MAAOA,WAAW;EAItB;EACAC,KAAKA,CAACC,KAAc,EAAEC,QAAiB;IACrC,IAAI,CAACC,QAAQ,CAACC,0BAA0B,CAACH,KAAK,EAAEC,QAAQ,CAAC,CAACG,IAAI,CAAE,MAAK;MACnEC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAE,MAAM,CAAC;MACrC,IAAI,CAACC,MAAM,CAACC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC;IACrC,CAAC,EAAEC,GAAG,IAAG;MACPC,KAAK,CAAC,kBAAkB,CAAC;MACzB,IAAI,CAACH,MAAM,CAACC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;IAClC,CAAC,CAAC;EACJ;EAEA;EACAG,QAAQA,CAACX,KAAc,EAAEC,QAAiB;IACxC,IAAI,CAACC,QAAQ,CAACU,8BAA8B,CAACZ,KAAK,EAAEC,QAAQ,CAAC,CAACG,IAAI,CAAC,MAAK;MACtEM,KAAK,CAAC,+BAA+B,CAAC;MACtC,IAAI,CAACH,MAAM,CAACC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;IAClC,CAAC,EAAEC,GAAG,IAAG;MACPC,KAAK,CAACD,GAAG,CAACI,OAAO,CAAC;MAClB,IAAI,CAACN,MAAM,CAACC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC;IACrC,CAAC,CAAC;EACJ;EAEA;EACAM,MAAMA,CAAA;IACJ,IAAI,CAACZ,QAAQ,CAACa,OAAO,EAAE,CAACX,IAAI,CAAE,MAAK;MACjCC,YAAY,CAACW,UAAU,CAAC,OAAO,CAAC;MAChC,IAAI,CAACT,MAAM,CAACC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;IAClC,CAAC,EAAEC,GAAG,IAAG;MACPC,KAAK,CAACD,GAAG,CAACI,OAAO,CAAC;IACpB,CAAC,CAAC;EACJ;;SAlCWf,WAAW;;mBAAXA,MAAW;AAAA;;SAAXA,MAAW;EAAAmB,OAAA,EAAXnB,MAAW,CAAAoB,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}