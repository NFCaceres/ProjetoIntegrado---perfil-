{"ast":null,"code":"import _asyncToGenerator from \"C:/projeto-integrado/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/compat/auth\";\nimport * as i2 from \"@angular/router\";\nexport class AuthGuard {\n  constructor(fireauth, router) {\n    this.fireauth = fireauth;\n    this.router = router;\n  }\n  canActivate() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      if (yield _this.fireauth.currentUser) {\n        // O usuário está autenticado, permitir acesso à rota protegida\n        return true;\n      } else {\n        // O usuário não está autenticado, redirecionar para a rota de login\n        _this.router.navigate(['/login']);\n        return false;\n      }\n    })();\n  }\n}\n_class = AuthGuard;\n_class.ɵfac = function AuthGuard_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.AngularFireAuth), i0.ɵɵinject(i2.Router));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["AuthGuard","constructor","fireauth","router","canActivate","_this","_asyncToGenerator","currentUser","navigate","i0","ɵɵinject","i1","AngularFireAuth","i2","Router","factory","ɵfac","providedIn"],"sources":["C:\\projeto-integrado\\src\\app\\shared\\auth.guard.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { CanActivate, Router } from \"@angular/router\";\r\nimport { AngularFireAuth } from '@angular/fire/compat/auth';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n    constructor(private fireauth: AngularFireAuth, private router: Router) {}\r\n  \r\n    async canActivate(): Promise<boolean> {\r\n        if (await this.fireauth.currentUser) {\r\n            // O usuário está autenticado, permitir acesso à rota protegida\r\n            return true;\r\n        } else {\r\n            // O usuário não está autenticado, redirecionar para a rota de login\r\n            this.router.navigate(['/login']);  \r\n            return false;\r\n        }\r\n    }\r\n}\r\n"],"mappings":";;;;;AAOA,OAAM,MAAOA,SAAS;EAClBC,YAAoBC,QAAyB,EAAUC,MAAc;IAAjD,KAAAD,QAAQ,GAARA,QAAQ;IAA2B,KAAAC,MAAM,GAANA,MAAM;EAAW;EAElEC,WAAWA,CAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MACb,UAAUD,KAAI,CAACH,QAAQ,CAACK,WAAW,EAAE;QACjC;QACA,OAAO,IAAI;OACd,MAAM;QACH;QACAF,KAAI,CAACF,MAAM,CAACK,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;QAChC,OAAO,KAAK;;IACf;EACL;;SAZSR,SAAS;;mBAATA,MAAS,EAAAS,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,eAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;AAAA;;SAATd,MAAS;EAAAe,OAAA,EAATf,MAAS,CAAAgB,IAAA;EAAAC,UAAA,EAFN;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}