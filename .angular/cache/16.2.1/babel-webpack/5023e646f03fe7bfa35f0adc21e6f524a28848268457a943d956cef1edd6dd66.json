{"ast":null,"code":"import _asyncToGenerator from \"C:/ProjetoIntegrado/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/compat/auth\";\nimport * as i2 from \"@angular/router\";\nexport class AuthGuard {\n  constructor(fireauth, router) {\n    this.fireauth = fireauth;\n    this.router = router;\n    this.isRedirecting = false;\n  }\n  canActivate() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      return new Promise(resolve => {\n        _this.fireauth.onAuthStateChanged(user => {\n          if (user) {\n            const currentUrl = _this.router.url;\n            if (currentUrl === '/login' && !_this.isRedirecting) {\n              _this.isRedirecting = true;\n              console.log(_this.isRedirecting);\n              _this.router.navigate(['/home']);\n            }\n            // O usuário está autenticado, permitir acesso a todas as rotas\n            resolve(true);\n          } else {\n            // O usuário não está autenticado, redirecionar para a rota de login\n            _this.router.navigate(['/login']);\n            resolve(false);\n          }\n        });\n      });\n    })();\n  }\n}\n_class = AuthGuard;\n_class.ɵfac = function AuthGuard_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.AngularFireAuth), i0.ɵɵinject(i2.Router));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["AuthGuard","constructor","fireauth","router","isRedirecting","canActivate","_this","_asyncToGenerator","Promise","resolve","onAuthStateChanged","user","currentUrl","url","console","log","navigate","i0","ɵɵinject","i1","AngularFireAuth","i2","Router","factory","ɵfac","providedIn"],"sources":["C:\\ProjetoIntegrado\\src\\app\\shared\\auth.guard.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { CanActivate, Router } from \"@angular/router\";\r\nimport { AngularFireAuth } from '@angular/fire/compat/auth';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n    constructor(private fireauth: AngularFireAuth, private router: Router) {}\r\n    private isRedirecting = false;\r\n    async canActivate(): Promise<boolean> {\r\n        return new Promise<boolean>((resolve) => {\r\n            this.fireauth.onAuthStateChanged((user) => {\r\n                if (user) {\r\n\r\n                    const currentUrl = this.router.url;\r\n                    if (currentUrl === '/login' && !this.isRedirecting) {\r\n                        this.isRedirecting = true;\r\n                        console.log(this.isRedirecting);\r\n                        this.router.navigate(['/home']);\r\n                    }\r\n                    // O usuário está autenticado, permitir acesso a todas as rotas\r\n                    resolve(true);\r\n                } else {\r\n                    // O usuário não está autenticado, redirecionar para a rota de login\r\n                    this.router.navigate(['/login']);  \r\n                    resolve(false);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    \r\n}\r\n"],"mappings":";;;;;AAOA,OAAM,MAAOA,SAAS;EAClBC,YAAoBC,QAAyB,EAAUC,MAAc;IAAjD,KAAAD,QAAQ,GAARA,QAAQ;IAA2B,KAAAC,MAAM,GAANA,MAAM;IACrD,KAAAC,aAAa,GAAG,KAAK;EAD2C;EAElEC,WAAWA,CAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MACb,OAAO,IAAIC,OAAO,CAAWC,OAAO,IAAI;QACpCH,KAAI,CAACJ,QAAQ,CAACQ,kBAAkB,CAAEC,IAAI,IAAI;UACtC,IAAIA,IAAI,EAAE;YAEN,MAAMC,UAAU,GAAGN,KAAI,CAACH,MAAM,CAACU,GAAG;YAClC,IAAID,UAAU,KAAK,QAAQ,IAAI,CAACN,KAAI,CAACF,aAAa,EAAE;cAChDE,KAAI,CAACF,aAAa,GAAG,IAAI;cACzBU,OAAO,CAACC,GAAG,CAACT,KAAI,CAACF,aAAa,CAAC;cAC/BE,KAAI,CAACH,MAAM,CAACa,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;;YAEnC;YACAP,OAAO,CAAC,IAAI,CAAC;WAChB,MAAM;YACH;YACAH,KAAI,CAACH,MAAM,CAACa,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;YAChCP,OAAO,CAAC,KAAK,CAAC;;QAEtB,CAAC,CAAC;MACN,CAAC,CAAC;IAAC;EACP;;SAvBST,SAAS;;mBAATA,MAAS,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,eAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;AAAA;;SAATtB,MAAS;EAAAuB,OAAA,EAATvB,MAAS,CAAAwB,IAAA;EAAAC,UAAA,EAFN;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}