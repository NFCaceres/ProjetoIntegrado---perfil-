{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport class AuthGuard {\n  constructor(router) {\n    this.router = router;\n  }\n  canActivate() {\n    return this.authService.login(email, password).then(loginSuccessful => {\n      if (loginSuccessful) {\n        return true; // Login bem-sucedido\n      } else {\n        this.router.navigate(['/login']);\n        return false; // Erro de login ou email não verificado\n      }\n    });\n  }\n}\n_class = AuthGuard;\n_class.ɵfac = function AuthGuard_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.Router));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["AuthGuard","constructor","router","canActivate","authService","login","email","password","then","loginSuccessful","navigate","i0","ɵɵinject","i1","Router","factory","ɵfac","providedIn"],"sources":["C:\\projeto-integrado\\src\\app\\shared\\auth.guard.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { CanActivate, Router } from \"@angular/router\";\r\nimport { AuthService } from \"./auth.service\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class AuthGuard implements CanActivate {\r\n    authService: any;\r\n    constructor(private router: Router) {}\r\n  \r\n    canActivate(): Promise<boolean> {\r\n        return this.authService.login(email, password).then((loginSuccessful) => {\r\n          if (loginSuccessful) {\r\n            return true; // Login bem-sucedido\r\n          } else {\r\n            this.router.navigate(['/login']);\r\n            return false; // Erro de login ou email não verificado\r\n          }\r\n        });\r\n      }\r\n    }"],"mappings":";;;AAQA,OAAM,MAAOA,SAAS;EAElBC,YAAoBC,MAAc;IAAd,KAAAA,MAAM,GAANA,MAAM;EAAW;EAErCC,WAAWA,CAAA;IACP,OAAO,IAAI,CAACC,WAAW,CAACC,KAAK,CAACC,KAAK,EAAEC,QAAQ,CAAC,CAACC,IAAI,CAAEC,eAAe,IAAI;MACtE,IAAIA,eAAe,EAAE;QACnB,OAAO,IAAI,CAAC,CAAC;OACd,MAAM;QACL,IAAI,CAACP,MAAM,CAACQ,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;QAChC,OAAO,KAAK,CAAC,CAAC;;IAElB,CAAC,CAAC;EACJ;;SAbOV,SAAS;;mBAATA,MAAS,EAAAW,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,MAAA;AAAA;;SAATd,MAAS;EAAAe,OAAA,EAATf,MAAS,CAAAgB,IAAA;EAAAC,UAAA,EAHN;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}