{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as firebase from \"firebase/app\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/compat/auth\";\nimport * as i2 from \"@angular/router\";\nexport let AuthService = /*#__PURE__*/(() => {\n  var _class;\n  class AuthService {\n    constructor(fireauth, router) {\n      this.fireauth = fireauth;\n      this.router = router;\n      firebase.initializeApp(environment.firebaseConfig);\n      this.fireauth.setPersistence(firebase.auth.Auth.Persistence.LOCAL);\n    }\n    isLoggedIn() {\n      const isUserAuthenticated = !!this.fireauth.currentUser;\n      console.log(\"AuthService: isUserAuthenticated =\", isUserAuthenticated);\n      return !!this.fireauth.currentUser;\n    }\n    // metodo de login\n    login(email, password) {\n      this.fireauth.signInWithEmailAndPassword(email, password).then(res => {\n        localStorage.setItem('token', 'true');\n        if (res.user?.emailVerified == true) {\n          this.loginSuccess = true; // Login bem-sucedido\n          this.router.navigate(['/home']);\n        } else {\n          this.loginSuccess = false; // Login com falha (email não verificado)\n          this.router.navigate(['/verify-email']);\n        }\n      }, err => {\n        this.loginSuccess = false; // Login com falha (erro)\n        alert('Algo está errado');\n        this.router.navigate(['/login']);\n      });\n    }\n    //metodo de cadastro\n    register(email, password) {\n      this.fireauth.createUserWithEmailAndPassword(email, password).then(res => {\n        alert('Cadastro efetuado com sucesso');\n        this.router.navigate(['/login']);\n        this.sendEmailVerification(res.user);\n      }, err => {\n        alert(err.message);\n        this.router.navigate(['/register']);\n      });\n    }\n    // sair\n    logout() {\n      this.fireauth.signOut().then(() => {\n        localStorage.removeItem('token');\n        this.router.navigate(['/login']);\n      }, err => {\n        alert(err.message);\n      });\n    }\n    // recupertar senha \n    forgotPassword(email) {\n      this.fireauth.sendPasswordResetEmail(email).then(() => {\n        this.router.navigate(['/verify-email']);\n      }, err => {\n        alert('Algo está errado');\n      });\n    }\n    // verificação de email\n    sendEmailVerification(user) {\n      user.sendEmailVerification().then(res => {\n        this.router.navigate(['/verify-email']);\n      }, err => {\n        alert('Algo está errado. Não cosnigo enviar o email de confirmação.');\n      });\n    }\n  }\n  _class = AuthService;\n  _class.ɵfac = function AuthService_Factory(t) {\n    return new (t || _class)(i0.ɵɵinject(i1.AngularFireAuth), i0.ɵɵinject(i2.Router));\n  };\n  _class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: _class,\n    factory: _class.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}