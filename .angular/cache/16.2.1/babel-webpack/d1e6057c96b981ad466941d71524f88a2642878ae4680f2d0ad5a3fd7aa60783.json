{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/compat/auth\";\nimport * as i2 from \"@angular/router\";\nexport class AuthService {\n  constructor(fireauth, router) {\n    this.fireauth = fireauth;\n    this.router = router;\n  }\n  // metodo de login\n  login(email, password) {\n    this.fireauth.signInWithEmailAndPassword(email, password).then(() => {\n      localStorage.setItem('token', 'true');\n      this.router.navigate(['/home']);\n      if (res.user?.emailVerfied == true) {\n        this.router.navigate(['dashboard']);\n      } else {\n        this.router.navigate(['/varify-email ']);\n      }\n    }, err => {\n      alert('Algo está errado');\n      this.router.navigate(['/login']);\n    });\n  }\n  //metodo de cadastro\n  register(email, password) {\n    this.fireauth.createUserWithEmailAndPassword(email, password).then(res => {\n      alert('Cadastro efetuado com sucesso');\n      this.router.navigate(['/login']);\n      this.sendEmailForVarification(res.user);\n    }, err => {\n      alert(err.message);\n      this.router.navigate(['/register']);\n    });\n  }\n  // sair\n  logout() {\n    this.fireauth.signOut().then(() => {\n      localStorage.removeItem('token');\n      this.router.navigate(['/login']);\n    }, err => {\n      alert(err.message);\n    });\n  }\n  // recupertar senha \n  forgotPassword(email) {\n    this.fireauth.sendPasswordResetEmail(email).then(() => {\n      this.router.navigate(['/varify-email']);\n    }, err => {\n      alert('Algo está errado');\n    });\n  }\n  // verificação de email\n  sendEmailForVarification(user) {\n    user.sendEmailForVarification().then(res => {\n      this.router.navigate(['/varify-email']);\n    }, err => {\n      alert('Algo está errado. Não cosnigo enviar o email de confirmação.');\n    });\n  }\n}\n_class = AuthService;\n_class.ɵfac = function AuthService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.AngularFireAuth), i0.ɵɵinject(i2.Router));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["AuthService","constructor","fireauth","router","login","email","password","signInWithEmailAndPassword","then","localStorage","setItem","navigate","res","user","emailVerfied","err","alert","register","createUserWithEmailAndPassword","sendEmailForVarification","message","logout","signOut","removeItem","forgotPassword","sendPasswordResetEmail","i0","ɵɵinject","i1","AngularFireAuth","i2","Router","factory","ɵfac","providedIn"],"sources":["C:\\projeto-integrado\\src\\app\\shared\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/compat/auth';\nimport { Router } from '@angular/router';\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor( private fireauth : AngularFireAuth, private router : Router) { }\n  \n  // metodo de login\n  login(email : string, password : string) {\n    this.fireauth.signInWithEmailAndPassword(email, password).then(() => { \n      localStorage.setItem('token', 'true');\n      this.router.navigate(['/home']);\n\n      if(res.user?.emailVerfied == true) {\n        this.router.navigate(['dashboard']); \n      } else {\n        this.router.navigate(['/varify-email ']);\n      }\n\n    }, err => {\n      alert('Algo está errado');\n      this.router.navigate(['/login']);\n    })\n  } \n  \n  //metodo de cadastro\n  register(email : string, password : string){\n    this.fireauth.createUserWithEmailAndPassword(email, password).then( res => {\n      alert('Cadastro efetuado com sucesso');\n      this.router.navigate(['/login']);\n      this.sendEmailForVarification(res.user);\n    }, err => {\n      alert(err.message);\n      this.router.navigate(['/register']);\n    })\n  }\n\n  // sair\n  logout(){\n    this.fireauth.signOut().then( () => {\n      localStorage.removeItem('token');\n      this.router.navigate(['/login']);\n    }, err => {\n      alert(err.message);\n    })\n  }\n  \n  // recupertar senha \n  forgotPassword(email : string) {\n    this.fireauth.sendPasswordResetEmail(email).then( () => {\n      this.router.navigate(['/varify-email']);\n    }, err => {\n      alert('Algo está errado');\n    })\n    }\n\n  // verificação de email\n  sendEmailForVarification(user : any) {\n    user.sendEmailForVarification().then((res : any) => {\n      this.router.navigate(['/varify-email']);\n    }, (err : any) => {\n      alert('Algo está errado. Não cosnigo enviar o email de confirmação.')\n    })\n  }\n  }\n\n\n\n"],"mappings":";;;;AAMA,OAAM,MAAOA,WAAW;EAEtBC,YAAqBC,QAA0B,EAAUC,MAAe;IAAnD,KAAAD,QAAQ,GAARA,QAAQ;IAA4B,KAAAC,MAAM,GAANA,MAAM;EAAa;EAE5E;EACAC,KAAKA,CAACC,KAAc,EAAEC,QAAiB;IACrC,IAAI,CAACJ,QAAQ,CAACK,0BAA0B,CAACF,KAAK,EAAEC,QAAQ,CAAC,CAACE,IAAI,CAAC,MAAK;MAClEC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAE,MAAM,CAAC;MACrC,IAAI,CAACP,MAAM,CAACQ,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;MAE/B,IAAGC,GAAG,CAACC,IAAI,EAAEC,YAAY,IAAI,IAAI,EAAE;QACjC,IAAI,CAACX,MAAM,CAACQ,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC;OACpC,MAAM;QACL,IAAI,CAACR,MAAM,CAACQ,QAAQ,CAAC,CAAC,gBAAgB,CAAC,CAAC;;IAG5C,CAAC,EAAEI,GAAG,IAAG;MACPC,KAAK,CAAC,kBAAkB,CAAC;MACzB,IAAI,CAACb,MAAM,CAACQ,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;IAClC,CAAC,CAAC;EACJ;EAEA;EACAM,QAAQA,CAACZ,KAAc,EAAEC,QAAiB;IACxC,IAAI,CAACJ,QAAQ,CAACgB,8BAA8B,CAACb,KAAK,EAAEC,QAAQ,CAAC,CAACE,IAAI,CAAEI,GAAG,IAAG;MACxEI,KAAK,CAAC,+BAA+B,CAAC;MACtC,IAAI,CAACb,MAAM,CAACQ,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;MAChC,IAAI,CAACQ,wBAAwB,CAACP,GAAG,CAACC,IAAI,CAAC;IACzC,CAAC,EAAEE,GAAG,IAAG;MACPC,KAAK,CAACD,GAAG,CAACK,OAAO,CAAC;MAClB,IAAI,CAACjB,MAAM,CAACQ,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC;IACrC,CAAC,CAAC;EACJ;EAEA;EACAU,MAAMA,CAAA;IACJ,IAAI,CAACnB,QAAQ,CAACoB,OAAO,EAAE,CAACd,IAAI,CAAE,MAAK;MACjCC,YAAY,CAACc,UAAU,CAAC,OAAO,CAAC;MAChC,IAAI,CAACpB,MAAM,CAACQ,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;IAClC,CAAC,EAAEI,GAAG,IAAG;MACPC,KAAK,CAACD,GAAG,CAACK,OAAO,CAAC;IACpB,CAAC,CAAC;EACJ;EAEA;EACAI,cAAcA,CAACnB,KAAc;IAC3B,IAAI,CAACH,QAAQ,CAACuB,sBAAsB,CAACpB,KAAK,CAAC,CAACG,IAAI,CAAE,MAAK;MACrD,IAAI,CAACL,MAAM,CAACQ,QAAQ,CAAC,CAAC,eAAe,CAAC,CAAC;IACzC,CAAC,EAAEI,GAAG,IAAG;MACPC,KAAK,CAAC,kBAAkB,CAAC;IAC3B,CAAC,CAAC;EACF;EAEF;EACAG,wBAAwBA,CAACN,IAAU;IACjCA,IAAI,CAACM,wBAAwB,EAAE,CAACX,IAAI,CAAEI,GAAS,IAAI;MACjD,IAAI,CAACT,MAAM,CAACQ,QAAQ,CAAC,CAAC,eAAe,CAAC,CAAC;IACzC,CAAC,EAAGI,GAAS,IAAI;MACfC,KAAK,CAAC,8DAA8D,CAAC;IACvE,CAAC,CAAC;EACJ;;SA5DWhB,WAAW;;mBAAXA,MAAW,EAAA0B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,eAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;AAAA;;SAAX/B,MAAW;EAAAgC,OAAA,EAAXhC,MAAW,CAAAiC,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}